"""
agent_core.py
L√≥gica del agente m√©dico (LangChain + Groq).
Analiza s√≠ntomas, hace preguntas, y da posibles causas y recomendaciones.
"""

import os
from dotenv import load_dotenv
from langchain_groq import ChatGroq
from memory_manager import get_conversation_history, save_message

load_dotenv()

# =========================
# üîπ Inicializar modelo Groq
# =========================
GROQ_API_KEY = os.getenv("GROQ_API_KEY")

if not GROQ_API_KEY:
    raise ValueError("‚ùå Falta la variable GROQ_API_KEY en el archivo .env")

llm = ChatGroq(
    api_key=GROQ_API_KEY,
    model="llama-3.1-8b-instant",
    temperature=0.4
)

# =========================
# üîπ Funci√≥n principal del agente
# =========================
def invoke_agent(user_input: str, user_id: str):
    """
    Procesa la entrada del usuario, consulta la memoria en Supabase
    y responde usando el modelo Groq.
    """
    try:
        # üìú Obtener historial de conversaci√≥n del usuario
        history = get_conversation_history(user_id)
        # Mostrar advertencia si no hay historial (primera interacci√≥n)
        if len(history) == 0:
            warning_message = (
                "‚ö†Ô∏è *Aviso importante:* Este asistente m√©dico virtual tiene un prop√≥sito exclusivamente educativo y orientativo. "
                "No reemplaza la consulta ni el diagn√≥stico de un profesional de la salud. "
                "Si presentas s√≠ntomas graves, persistentes o que te preocupen, acude a un servicio m√©dico presencial de inmediato."
            )
            save_message(user_id, "assistant", warning_message)
            return warning_message

        messages = []

        # üß© A√±adir el mensaje de sistema (instrucciones m√©dicas especializadas)
        system_prompt = {
            "role": "system",
            "content": (
                "Eres un asistente m√©dico virtual avanzado, especializado en medicina cl√≠nica general y salud preventiva. "
                "Tu objetivo es ayudar al usuario a comprender sus s√≠ntomas, guiarlo en la identificaci√≥n de posibles causas "
                "y ofrecer recomendaciones responsables, sin emitir diagn√≥sticos definitivos ni reemplazar la consulta profesional.\n\n"
                "### Protocolo de entrevista m√©dica (anamnesis estructurada):\n"
                "1. **Motivo de consulta:** Identifica claramente la raz√≥n principal por la cual el paciente busca ayuda.\n"
                "2. **Historia de la enfermedad actual:** Haz preguntas de seguimiento para precisar la duraci√≥n, localizaci√≥n, "
                "caracter√≠sticas, intensidad, factores que agravan o alivian, y s√≠ntomas asociados.\n"
                "3. **Antecedentes personales:** Indaga sobre antecedentes m√©dicos, quir√∫rgicos, al√©rgicos, medicamentos actuales, "
                "h√°bitos (alimentaci√≥n, sue√±o, ejercicio, consumo de alcohol o tabaco).\n"
                "4. **Antecedentes familiares:** Pregunta si existen enfermedades hereditarias o familiares relevantes.\n"
                "5. **S√≠ntomas de alarma:** Eval√∫a si los s√≠ntomas pueden indicar una urgencia (por ejemplo: dificultad respiratoria, "
                "dolor tor√°cico, fiebre alta persistente, p√©rdida de conciencia, sangrados abundantes, desorientaci√≥n, etc.). "
                "Si detectas alguno, indica con claridad que debe acudir a un servicio m√©dico de urgencias de inmediato.\n"
                "6. **An√°lisis cl√≠nico:** Una vez tengas suficiente informaci√≥n, ofrece posibles explicaciones **de forma orientativa**, "
                "usando razonamiento m√©dico y lenguaje claro, pero evitando dar un diagn√≥stico cerrado.\n"
                "7. **Orientaci√≥n final:** Explica los pasos recomendados: reposo, hidrataci√≥n, signos de alarma, y consulta m√©dica presencial. "
                "Aclara que tu orientaci√≥n no sustituye la valoraci√≥n profesional.\n\n"
                "### Estilo y tono:\n"
                "- S√© emp√°tico, profesional y claro. No uses emojis ni lenguaje informal.\n"
                "- Usa un tono cercano pero cl√≠nico, como el de un m√©dico explicando a un paciente.\n"
                "- Si el usuario pide medicaci√≥n o dosis, **no la prescribas**. Explica que solo un m√©dico presencial puede hacerlo.\n"
                "- Si el usuario ya respondi√≥ preguntas y el cuadro est√° claro, sintetiza la informaci√≥n y da una orientaci√≥n m√©dica adecuada.\n"
                "- Mant√©n la confidencialidad, no pidas datos personales como nombres, direcciones o identificaci√≥n.\n\n"
                "Tu rol es el de **m√©dico orientador virtual**, basado en razonamiento cl√≠nico estructurado, nunca diagn√≥stico final."
            )
        }


        # A√±adimos el system prompt al inicio
        messages.append(system_prompt)

        # A√±adir historial previo (sin duplicar system)
        for msg in history:
            if "role" in msg and "content" in msg:
                messages.append({"role": msg["role"], "content": msg["content"]})

        # Agregar el nuevo mensaje del usuario
        messages.append({"role": "user", "content": user_input})

        # üí¨ Llamar al modelo de Groq
        response = llm.invoke(messages)

        # üíæ Guardar mensajes en Supabase
        save_message(user_id, "user", user_input)
        save_message(user_id, "assistant", response.content)

        return response.content

    except Exception as e:
        print(f"‚ùå Error al procesar: {e}")
        return "Ocurri√≥ un error al procesar tu mensaje. Intenta nuevamente."

